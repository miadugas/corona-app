{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Info","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce833ca3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({  data: { confirmed, recovered, deaths, lastUpdate }}) => {\n    if(!confirmed) {\n    return 'Loading...';\n}\n\nreturn (\n    <div className={styles.container}>\n    <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n            <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n            {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n            Number of active cases of COVID-19.\n            </Typography>\n        </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n            <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n            {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n            Number of recoveries from COVID-19.\n            </Typography>\n        </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n        <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n            <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n            {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n            Number of deaths caused by COVID-19.\n            </Typography>\n        </CardContent>\n        </Grid>\n    </Grid>\n    </div>\n);\n};\n\nexport default Info;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\nlet changeableUrl = url;\n\nif (country) {\n    changeableUrl = `${url}/countries/${country}`;\n}\n\ntry {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n} catch (error) {\n    return error;\n}\n};\n\nexport const fetchDailyData = async () => {\ntry {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n} catch (error) {\n    return error;\n}\n};\n\nexport const fetchCountries = async () => {\ntry {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n} catch (error) {\n    return error;\n}\n};","import React, { useState, useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n    const fetchMyAPI = async () => {\n        const initialDailyData = await fetchDailyData();\n\n        setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n    }, []);\n\n    const barChart = (\n    confirmed ? (\n        <Bar\n        data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [\n            {\n                label: 'People',\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                data: [confirmed.value, recovered.value, deaths.value],\n            },\n            ],\n        }}\n        options={{\n            legend: { display: false },\n            title: { display: true, text: `Current state in ${country}` },\n        }}\n        />\n    ) : null\n    );\n\n    const lineChart = (\n    dailyData[0] ? (\n        <Line\n        data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n            }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n            },\n            ],\n        }}\n        />\n    ) : null\n    );\n\n    return (\n    <div className={styles.container}>\n        {country ? barChart : lineChart}\n    </div>\n    );\n};\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\nconst [countries, setCountries] = useState([]);\n\nuseEffect(() => {\n    const fetchAPI = async () => {\n    setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n}, []);\n\nreturn (\n    <FormControl className={styles.formControl}>\n    <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n    </NativeSelect>\n    </FormControl>\n);\n};\n\nexport default Countries;\n","import React from 'react';\n\n// import Cards from './components/Cards/Cards';\n// import Chart from './components/Chart/Chart';\n// import CountryPicker from './components/CountryPicker/CountryPicker';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport image from './images/image.png';\n\n//class based because its easier \nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\nasync componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n}\n\nhandleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n}\n\n\nrender() {\n    const { data, country } = this.state;\n\n\n    \n    \n\n\n\n\n\n    return (\n    <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n        <hr/>\n        <br/>\n        {/* <p className=\"copyright\" >&copy; Mia Dugas Designs. Built in React.js Some Rights Reserved. Made with love.</p> */}\n    </div>\n    \n    );\n}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App /> , document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}